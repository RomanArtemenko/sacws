version: '3.4'

services:
  postgres:
    image: postgis/postgis:12-3.0-alpine
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    environment:
      POSTGRES_USER: geo
      POSTGRES_PASSWORD: geo
      POSTGRES_DB: geo
    ports:
      - "5432:5432"

  rabbit:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"

  zookeeper:
    image: qnib/plain-zookeeper:2018-04-25
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
     - KAFKA_BROKER_ID=1
     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
     - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
     - KAFKA_CREATE_TOPICS=common:1:1

  kafka-consumer:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - kafka
      - rabbit
    command: python3.8 kafka_consumer.py
    volumes:
      - ./:/app

  rabbit-consumer:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - rabbit
    command: python3.8 rabbit_consumer.py
    volumes:
      - ./:/app

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=eu-west-1
      - AWS_DEFAULT_REGION=eu-west-1
      - HOSTNAME_EXTERNAL=localhost
      - HOSTNAME=localstack
      - USE_SSL=false
      - DATA_DIR=/tmp/localstack/data
      - DEBUG=1
    volumes:
      - ./.aws:/docker-entrypoint-initaws.d
    logging:
      driver: none

volumes:
  postgres:
